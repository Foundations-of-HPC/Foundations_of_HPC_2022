.TH HPL_timer 3 "December 2, 2018" "HPL 2.3" "HPL Library Functions"
.SH NAME
HPL_timer \- Timer facility.
.SH SYNOPSIS
\fB\&#include "hpl.h"\fR
 
\fB\&void\fR
\fB\&HPL_timer(\fR
\fB\&const int\fR
\fI\&I\fR
\fB\&);\fR
.SH DESCRIPTION
\fB\&HPL_timer\fR
provides a  "stopwatch"  functionality  cpu/wall  timer  in
seconds.  Up to  64  separate timers can be functioning at once.  The
first call starts the timer,  and the second stops it.  This  routine
can be disenabled  by calling  HPL_timer_disable(),  so that calls to
the timer are ignored.  This feature can be used to make sure certain
sections of code do not affect timings,  even  if  they call routines
which have HPL_timer calls in them. HPL_timer_enable() will re-enable
the  timer  functionality.  One  can retrieve  the current value of a
timer by calling
 
t0 = HPL_timer_inquire( HPL_WALL_TIME | HPL_CPU_TIME, I )
 
where  I  is the timer index in  [0..64).  To  initialize  the  timer
functionality, one must have called HPL_timer_boot()  prior to any of
the functions mentioned above.
.SH ARGUMENTS
.TP 8
I       (global input)          const int
On entry, I specifies the timer to stop/start.
.SH SEE ALSO
.BR HPL_timer_cputime \ (3),
.BR HPL_timer_walltime \ (3).
